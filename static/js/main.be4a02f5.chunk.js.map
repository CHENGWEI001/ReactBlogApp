{"version":3,"sources":["apis/jsonPlaceHolder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","fetchPost","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonplaceholder","get","sent","type","payload","data","stop","this","_x3","apply","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDom","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.be4a02f5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n});\n","import _ from 'lodash';\nimport jsonplaceholder from '../apis/jsonPlaceHolder';\n\nexport const fetchPostAndUsers = () => async(dispatch, getState) => {\n  await dispatch(fetchPost());\n\n  // const userIds = _.uniq(_.map(getState().posts, 'userId'));\n  // userIds.forEach(id => dispatch(fetchUser(id)));\n\n  _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPost = () => async dispatch => {\n  const response = await jsonplaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: response.data });\n};\n\n// memoize version\n// export const fetchUser = (id) => dispatch => _fetchUser(id, dispatch);\n\n// const _fetchUser = _.memoize(async(id, dispatch) => {\n//   const response = await jsonplaceholder.get(`/users/${id}`);\n//   dispatch({ type: 'FETCH_USER', payload: response.data });\n// });\n\n\nexport const fetchUser = (id) => async dispatch => {\n  const response = await jsonplaceholder.get(`/users/${id}`);\n  dispatch({ type: 'FETCH_USER', payload: response.data });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions';\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    //this.props.fetchUser(this.props.userId);\n  }\n\n  render() {\n    const { user } = this.props;\n    if (!user) {\n      return null;\n    }\n\n    return <div className=\"header\">{user.name}</div>;\n  }\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return { user: state.users.find((user) => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps, { fetchUser })(UserHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostAndUsers } from '../actions';\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId}/>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, { fetchPostAndUsers })(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n  posts: postReducer,\n  users: userReducer\n});\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}